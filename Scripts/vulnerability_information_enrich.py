import requests
from urllib.parse import quote
import pymysql
from bs4 import BeautifulSoup
import re

def pad_params(value):
    return {
        "keyword": quote(value)
    }

basic_url = "https://cve.mitre.org/cgi-bin/cvekey.cgi"

headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36"
}


conn = pymysql.connect(
    host="localhost",
    user="root",
    password="SteinsGate0",
    database="oss_security_estimator",
    charset="utf8"
)

cursor = conn.cursor()
sql1 = "select github_project_relative_path, cve_number from vulnerable_project_in_huntre"
cursor.execute(sql1)
vulnerable_project_in_huntre_fetch_results = cursor.fetchall()
cursor.close()

# initialization
for result in vulnerable_project_in_huntre_fetch_results:
    cursor = conn.cursor()
    sql2 = "select count(*) from project_cve_table where github_project_relative_path = %s" % (result[0])
    count = cursor.execute(sql2)
    cursor.close()
    if count > 0:
        if not result[1].isspace():
            sql3 = "insert into project_cve_table values (%s, %s)" % (result[0], result[1])
            cursor = conn.cursor()
            try:
                cursor.execute(sql3)
                cursor.commit()
            except pymysql.err.OperationalError as e:
                conn.rollback()
                print("record has been in table")
            finally:
                cursor.close()

# information enrichment
cursor = conn.cursor()
sql4 = "select * from project_cve_table"
project_cve_table_fetch_result = cursor.execute(sql4)
cursor.close()

for result in project_cve_table_fetch_result:
    response = requests.get(url=basic_url, headers=headers, params=pad_params(result[0]))
    if response.status_code == 200:
        html = response.text
        bs = BeautifulSoup(html, "html.parse")
        cve_number_regex = re.compile("CVE-[0-9]{4}-[0-9]{4,}")
        cve_numbers = bs.find_all(text=cve_number_regex)
        for cve_number in cve_numbers:
            sql4 = "select count(*) from project_cve_table where cve_number = %s" % cve_number
            cursor = conn.cursor()
            if cursor.execute(sql4) == 0:
                try:
                    sql5 = "insert into project_cve_table values %s, %s" % (result[0], cve_numbers)
                except Exception as e:
                    conn.rollback()
                    print("error occurred when insert data", e)
                finally:
                    cursor.close()
    else:
        print(result[0] + "inquery error", response.status_code)
conn.close()
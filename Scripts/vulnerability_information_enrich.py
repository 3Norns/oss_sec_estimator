import requests
from urllib.parse import quote
import pymysql
from bs4 import BeautifulSoup
import re

def pad_params(value):
    return {
        "keyword": quote(value)
    }

basic_url = "https://cve.mitre.org/cgi-bin/cvekey.cgi"

headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36"
}


conn = pymysql.connect(
    host="localhost",
    user="root",
    password="SteinsGate0",
    database="oss_security_estimator",
    charset="utf8"
)

cursor = conn.cursor()

# initialization
sql1 = "select github_project_relative_path, cve_number from vulnerable_project_in_huntre group by github_project_relative_path, cve_number"
cursor.execute(sql1)
vulnerable_project_in_huntre_fetch_results = cursor.fetchall()
cursor.close()

# for result in vulnerable_project_in_huntre_fetch_results:
sql2 = "insert into project_cve_table (github_project_relative_path, cve_number) values (%s, %s)"
cursor = conn.cursor()
try:
    cursor.executemany(sql2, vulnerable_project_in_huntre_fetch_results)
    conn.commit()
except pymysql.err.OperationalError as e:
    conn.rollback()
    print("initialization error")
finally:
    cursor.close()

# information enrichment
cursor = conn.cursor()
sql3 = "select * from project_cve_table"
cursor.execute(sql3)
project_cve_table_fetch_results = cursor.fetchall()
cursor.close()

for result in project_cve_table_fetch_results:
    response = requests.get(url=basic_url, headers=headers, params=pad_params(result[0]))
    if response.status_code == 200:
        html = response.text
        bs = BeautifulSoup(html, "html.parser")
        cve_number_regex = re.compile("CVE-[0-9]{4}-[0-9]{4,}")
        target_tag_set = bs.find_all(name="a", text=cve_number_regex)
        for target_tag in target_tag_set:
            cve_number = target_tag.text.strip()
            sql3 = "select count(*) from project_cve_table where cve_number = %s"
            cursor = conn.cursor()
            cursor.execute(sql3, cve_number)
            count = cursor.fetchone()[0]
            if count == 0:
                try:
                    cursor = conn.cursor()
                    sql4 = "insert into project_cve_table values (%s, %s)"
                    cursor.execute(sql4, (result[0], cve_number))
                    conn.commit()
                except Exception as e:
                    conn.rollback()
                    print("error occurred when insert data", e)
                    print(cve_number)
                finally:
                    cursor.close()
            else:
                cursor.close()
    else:
        pass
        print(result[0] + "inquery error" + str(response.status_code))

# data cleaning
sql5 = "delete from project_cve_table where cve_number = ''"
try:
    cursor = conn.cursor()
    cursor.execute(sql5)
    conn.commit()
except pymysql.err.OperationalError as e:
    print("error occurred in data cleaning stage")
    conn.rollback()
finally:
    cursor.close()

conn.close()